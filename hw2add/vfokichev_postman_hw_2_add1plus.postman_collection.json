{
	"info": {
		"_postman_id": "b130f310-cbcd-49ee-b040-6961621bbc4e",
		"name": "vfokichev_postman_hw_2_add1plus",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21443364"
	},
	"item": [
		{
			"name": "PN all params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Name: 3-40 символов включительно, запрещены префиксные и постфиксные пробелы. Поле обязательное\r",
							"function validName(name) {\r",
							"    if (typeof(name) != \"string\") {\r",
							"        console.log(\"name not string\", name);\r",
							"        return false\r",
							"    }\r",
							"    let r = true\r",
							"    let name_len = name.length\r",
							"    if (name_len < 1) {\r",
							"        console.log(\"name not valid (empty)\", name);\r",
							"        r = false;\r",
							"    } else if (name_len > name.trim().length) {\r",
							"        console.log(\"name not valid (space in begin or end) [\" + name + \"]\");\r",
							"        r = false;\r",
							"    } else if (name_len < 3 || name_len > 40) {\r",
							"        console.log(\"name not valid (bad length)\", name);\r",
							"        r = false;\r",
							"    }\r",
							"    return r\r",
							"}\r",
							"\r",
							"// Age: только целые цифры в диапазоне 18-120 включительно. Поле обязательное\r",
							"function validAge(age) {\r",
							"    let r = true\r",
							"    if (isNaN(age)) {\r",
							"        console.log(\"age not number\", age)\r",
							"        r = false;\r",
							"    } else if (age < 18 || age > 120) {\r",
							"        console.log(\"age not valid\", age)\r",
							"        r = false;\r",
							"    }\r",
							"    return r\r",
							"}\r",
							"\r",
							"// Salary: только целые цифры в диапазоне 1-1000000 включительно. Поле обязательное\r",
							"function validSalary(salary) {\r",
							"    let r = true\r",
							"    if (isNaN(salary)) {\r",
							"        console.log(\"salary not number\", salary)\r",
							"        r = false;\r",
							"    } else if (salary < 1 || salary > 1000000) {\r",
							"        console.log(\"salary not valid\", salary)\r",
							"        r = false;\r",
							"    }\r",
							"    return r\r",
							"}\r",
							"\r",
							"function validParams(name, age, salary) {\r",
							"    console.log(name, age, salary);\r",
							"    const r1 = validName(name);\r",
							"    const r2 = validAge(age);\r",
							"    const r3 = validSalary(salary);\r",
							"    return r1 && r2 && r3\r",
							"}\r",
							"\r",
							"console.log(\"iteration\", pm.info.iteration+1);\r",
							"let name = pm.iterationData.get(\"name\");\r",
							"let age = pm.iterationData.get(\"age\");\r",
							"let salary = pm.iterationData.get(\"salary\");\r",
							"pm.test(\"PN params name=[\"+name+\"] age=[\"+age+\"] salary=[\"+salary+\"]\", function () {\r",
							"    if (validParams(name, age, salary))\r",
							"        pm.response.to.have.status(200);\r",
							"    else\r",
							"        pm.response.to.not.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}