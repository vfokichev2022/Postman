{
	"info": {
		"_postman_id": "3f347715-a1e8-4d59-8b63-c7e626bc9775",
		"name": "vfokichev_postman_hw_2_add4plus",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21443364"
	},
	"item": [
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// начаало в Pre-request Script\r",
							"\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 6. Спарсить response body в json.\r",
							"let json_resp = pm.response.json();\r",
							"\r",
							"// 7. Спарсить request.\r",
							"let json_req = request.data;\r",
							"\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"const params_names = ['start_qa_salary', 'qa_salary_after_6_months', 'qa_salary_after_12_months', 'qa_salary_after_1.5_year', 'qa_salary_after_3.5_years', 'person'];\r",
							"const salary_names = ['start_qa_salary', 'qa_salary_after_6_months', 'qa_salary_after_12_months', 'qa_salary_after_1.5_year', 'qa_salary_after_3.5_years'];\r",
							"const salary_ratio = [1, 2, 2.7, 3.3, 3.8];\r",
							"\r",
							"const len_params = params_names.length;\r",
							"const len_salary = salary_names.length;\r",
							"\r",
							"let max_len = len_salary;\r",
							"if (len_params > len_salary)\r",
							"    max_len = len_params;\r",
							"\r",
							"for (let i = 0; i < max_len; i++) {\r",
							"    if (i < len_params) {\r",
							"        pm.test(\"test test response contains \" + params_names[i], function () {\r",
							"            pm.expect(json_resp).to.have.property(params_names[i]);\r",
							"        });\r",
							"    }\r",
							"    if (i < len_salary) {\r",
							"        pm.test(\"test что параметр \" + salary_names[i] + \" равен salary*\" + salary_ratio[i], function () {\r",
							"            pm.expect(json_resp[salary_names[i]]).to.eql(parseInt(json_req.salary) * salary_ratio[i]);\r",
							"        });\r",
							"    }\r",
							"}\r",
							"\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"test что в параметре person, 1-й элемент из u_name равен salary из request\", function () {\r",
							"    pm.expect(json_resp.person.u_name[1]).to.eql(parseInt(json_req.salary));\r",
							"});\r",
							"\r",
							"// 20. Проверить, что параметр u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"test что параметр u_age равен age из request\", function () {\r",
							"    pm.expect(json_resp.person.u_age).to.eql(parseInt(json_req.age));\r",
							"});\r",
							"\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"pm.test(\"test что параметр u_salary_5_years равен salary*4.2 из request\", function () {\r",
							"    pm.expect(json_resp.person.u_salary_5_years).to.eql(parseInt(json_req.salary) * 4.2);\r",
							"});\r",
							"\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"let dict = json_resp.person;\r",
							"for (let key in dict){\r",
							"    console.log(key, dict[key]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_2\r",
							"// 1. Вставить параметр salary из окружения в request\r",
							"request.data['salary'] = pm.environment.get('salary')\r",
							"\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"request.data['age'] = pm.environment.get('age')\r",
							"\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"request.data['name'] = pm.environment.get('name');\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}